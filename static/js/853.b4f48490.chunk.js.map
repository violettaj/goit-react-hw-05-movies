{"version":3,"file":"static/js/853.b4f48490.chunk.js","mappings":"8SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,qCAAwCC,IADtC,cACnBE,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKXC,EAAY,mCAAG,WAAMC,GAAN,uFACHP,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCACmCM,EADnC,gCADG,cACpBJ,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,sDAOZG,EAAe,mCAAG,WAAMC,GAAN,uFACNT,EAAAA,EAAAA,IAAA,gBACZS,EADY,oBACER,EADF,oBADM,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAMfM,EAAe,mCAAG,WAAMD,GAAN,uFACNT,EAAAA,EAAAA,IAAA,gBACZS,EADY,4BACUR,EADV,oBADM,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAMfO,EAAU,mCAAG,WAAMF,GAAN,uFACDT,EAAAA,EAAAA,IAAA,gBACZS,EADY,4BACUR,EADV,2BADC,cAClBE,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,qD,6ICzBVQ,EAAS,WACpB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,gHAE6BP,EAAAA,EAAAA,IAAWE,GAFxC,gBAEWR,EAFX,EAEWA,QACRY,EAAWZ,GAHd,gDAKGc,MAAM,KAAMC,SALf,wDAAD,EAQD,GAAE,CAACP,KAEF,8BACGG,GAAWA,EAAQK,OAAS,GAC3B,wBACGL,EAAQM,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASf,EAAS,EAATA,GAC/B,OACE,2BACE,qCAAac,MACb,uBAAIC,MAFGf,EAKZ,OAGH,sEAIP,C","sources":["components/Api/Api.js","components/Review.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '1e921bda25d654ede2c45d2e5f25e7d6';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'components/Api/Api';\n\nexport const Review = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const { results } = await getReviews(movieId);\n        setReviews(results);\n      } catch (error) {\n        alert(error.message);\n      }\n    })();\n  }, [movieId]);\n  return (\n    <>\n      {reviews && reviews.length > 0 ? (\n        <ul>\n          {reviews.map(({ author, content, id }) => {\n            return (\n              <li key={id}>\n                <h1>Author: {author}</h1>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </>\n  );\n};\n"],"names":["axios","API_KEY","getTrending","response","data","results","searchMovies","query","getMovieDetails","id","getMovieCredits","getReviews","Review","movieId","useParams","useState","reviews","setReviews","useEffect","alert","message","length","map","author","content"],"sourceRoot":""}