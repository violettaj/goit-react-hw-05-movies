{"version":3,"file":"static/js/828.77e547f7.chunk.js","mappings":"8SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,qCAAwCC,IADtC,cACnBE,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKXC,EAAY,mCAAG,WAAMC,GAAN,uFACHP,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCACmCM,EADnC,gCADG,cACpBJ,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,sDAOZG,EAAe,mCAAG,WAAMC,GAAN,uFACNT,EAAAA,EAAAA,IAAA,gBACZS,EADY,oBACER,EADF,oBADM,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAMfM,EAAe,mCAAG,WAAMD,GAAN,uFACNT,EAAAA,EAAAA,IAAA,gBACZS,EADY,4BACUR,EADV,oBADM,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAMfO,EAAU,mCAAG,WAAMF,GAAN,uFACDT,EAAAA,EAAAA,IAAA,gBACZS,EADY,4BACUR,EADV,2BADC,cAClBE,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,qD,gICxBVQ,EAAe,WAC1B,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,IAJAE,EAAAA,EAAAA,YAAU,YACRV,EAAAA,EAAAA,IAAgBQ,GAASG,KAAKJ,EAC/B,GAAE,CAACC,IAEAF,EAAO,CACT,IAAQM,EAAuDN,EAAvDM,YAAaC,EAA0CP,EAA1CO,MAAOC,EAAmCR,EAAnCQ,SAAUC,EAAyBT,EAAzBS,aAChCC,EADyDV,EAAXW,OAC1BC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,KAAO,GAAjB,IAEnC,OACE,4BACE,gBACEC,IAAG,yCAAoCT,GACvCU,IAAG,UAAKT,MAEV,4BACE,wBAAKA,KACL,qCAAaU,KAAKC,MAAqB,GAAfT,GAAxB,QACA,sCACA,uBAAID,KACJ,qCAAaE,MAEb,SAAC,KAAD,CAAMS,GAAE,OAAR,mBACA,SAAC,KAAD,CAAMA,GAAE,UAAR,sBAEA,SAAC,EAAAC,SAAD,WACE,SAAC,KAAD,WAKT,CACF,C","sources":["components/Api/Api.js","pages/MoviesDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '1e921bda25d654ede2c45d2e5f25e7d6';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n","import { getMovieDetails } from 'components/Api/Api';\nimport { useState, useEffect } from 'react';\nimport { useParams, Outlet, Link } from 'react-router-dom';\nimport { Suspense } from 'react';\n\nexport const MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(setMovie);\n  }, [movieId]);\n\n  if (movie) {\n    const { poster_path, title, overview, vote_average, genres } = movie;\n    const genresList = genres.map(genre => genre.name + ' ');\n\n    return (\n      <div>\n        <img\n          src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n          alt={`${title}`}\n        />\n        <div>\n          <h2>{title}</h2>\n          <h3>Rating: {Math.round(vote_average * 10)}%</h3>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres: {genresList}</h3>\n\n          <Link to={`cast`}>Cast</Link>\n          <Link to={`reviews`}>Reviews</Link>\n\n          <Suspense>\n            <Outlet />\n          </Suspense>\n        </div>\n      </div>\n    );\n  }\n};\n"],"names":["axios","API_KEY","getTrending","response","data","results","searchMovies","query","getMovieDetails","id","getMovieCredits","getReviews","MovieDetails","useState","movie","setMovie","movieId","useParams","useEffect","then","poster_path","title","overview","vote_average","genresList","genres","map","genre","name","src","alt","Math","round","to","Suspense"],"sourceRoot":""}